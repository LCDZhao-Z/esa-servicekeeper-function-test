#Original properties recover
#Sun May 10 21:44:15 CST 2020
io.esastack.sailor.test.controller.RateLimitController.withoutFallback.limitForPeriod=5
io.esastack.sailor.test.controller.RateLimitController.withoutFallback.limitRefreshPeriod=10s
io.esastack.sailor.test.controller.RateLimitController.withoutFallback.fallbackValue=fallbackValue
io.esastack.sailor.test.controller.ConcurrentLimitController.withoutFallback.maxConcurrentLimit=10
io.esastack.sailor.test.controller.ConcurrentLimitController.withoutFallback.fallbackValue=fallbackValue
io.esastack.sailor.test.controller.RetryController.retryWithoutFallback.fallbackValue=fallbackValue
io.esastack.sailor.test.controller.RetryController.retryWithoutFallback.maxAttempts=3
io.esastack.sailor.test.controller.RetryController.retryWithoutFallback.alsoApplyFallbackToBizException=true
io.esastack.sailor.test.controller.CircuitBreakerController.withoutFallback.predicateStrategy=\
  io.esastack.servicekeeper.core.moats.circuitbreaker.predicate.PredicateBySpendTime
io.esastack.sailor.test.controller.CircuitBreakerController.withoutFallback.maxSpendTimeMs=50
io.esastack.sailor.test.controller.CircuitBreakerController.withoutFallback.fallbackValue=fallbackValue
io.esastack.sailor.test.controller.ArgsRateLimitController.withoutFallback.arg0.limitForPeriod={*\: 3}
io.esastack.sailor.test.controller.ArgsRateLimitController.withoutFallback.fallbackValue=aaa
io.esastack.sailor.test.controller.ArgConcurrentLimitController.withFallbackToValue.arg0.maxConcurrentLimit={*: 3}
io.esastack.sailor.test.controller.ArgConcurrentLimitController.withFallbackToValue.fallbackValue=fallbackValue
io.esastack.sailor.test.controller.ArgsCircuitBreakerController.withoutFallback.arg0.predicateStrategy=io.esastack.servicekeeper.core.moats.circuitbreaker.predicate.PredicateBySpendTime
io.esastack.sailor.test.controller.ArgsCircuitBreakerController.withoutFallback.arg0.maxSpendTimeMs={*: 50}
io.esastack.sailor.test.controller.ArgsCircuitBreakerController.withoutFallback.arg0.limitForPeriod={DDD:5, aaa : 3}
io.esastack.sailor.test.controller.ArgsCircuitBreakerController.withoutFallback.arg0.limitRefreshPeriod={aaa : 10s}
io.esastack.sailor.test.controller.ArgsCircuitBreakerController.withoutFallback.arg0.failureRateThreshold={DDD: 30.0f, CCC: 30.0f}
io.esastack.sailor.test.controller.ArgsCircuitBreakerController.withoutFallback.arg0.ringBufferSizeInClosedState=3
io.esastack.sailor.test.controller.ArgsCircuitBreakerController.withoutFallback.arg0.forcedDisabled={*: false}
#demoGroupA中每个接口的最大并发调用数为10
#group.groupA.maxConcurrentLimit=1
#demoGroupA中每个接口的周期内请求数为100
#group.groupA.limitForPeriod=3
#
##demoGroupA中每个接口的限流周期为10s
#group.groupA.limitRefreshPeriod=10s
#demoGroupA中每个接口的熔断阈值为90%
group.groupA.failureRateThreshold=90.0f
group.groupA.predicateStrategy=io.esastack.servicekeeper.core.moats.circuitbreaker.predicate.PredicateBySpendTime
group.groupA.maxSpendTimeMs=10015
group.groupA.ringBufferSizeInClosedState=2
group.groupA.fallbackValue=fallbackValue